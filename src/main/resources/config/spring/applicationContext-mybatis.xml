<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">


    <description>Spring mybatis配置</description>

    <!-- 加载数据库配置文件 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:config/config.properties</value>
            </list>
        </property>
    </bean>

    <!--或者-->
    <!--<context:property-placeholder location="classpath:config/config.properties"/>-->



    <!--
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
			<property name="driverClass">
				<value>org.gjt.mm.mysql.Driver</value>
			</property>
			<property name="jdbcUrl">
				<value>jdbc:mysql://localhost:3306/consult</value>
			</property>
			<property name="user">
				<value>myConsult</value>
			</property>
			<property name="password">
				<value>123456</value>
			</property>
			<property name="minPoolSize" value="10" />
			<property name="maxPoolSize" value="100" />
			<property name="maxIdleTime" value="1800" />
			<property name="acquireIncrement" value="3" />
			<property name="maxStatements" value="1000" />
			<property name="initialPoolSize" value="10" />
			<property name="idleConnectionTestPeriod" value="60" />
			<property name="acquireRetryAttempts" value="30" />
			<property name="breakAfterAcquireFailure" value="false" />
			<property name="testConnectionOnCheckout" value="false" />
			<property name="acquireRetryDelay">
				<value>100</value>
			</property>


		</bean>

		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="mapperLocations">
				<value>classpath*:com/dongnao/jack/xml/*Mapper.xml</value>
			</property>
		</bean>

		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="annotationClass" value="org.springframework.stereotype.Repository"/>
			<property name="basePackage" value="com.dongnao.jack.dao"/>
			<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		</bean>


		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
		</bean>
		<tx:annotation-driven transaction-manager="transactionManager" />
		<tx:advice id="userTxAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="save*" propagation="REQUIRED" read-only="false"
					rollback-for="java.lang.RuntimeException" />
				<tx:method name="delete*" propagation="REQUIRED" read-only="false"
					rollback-for="java.lang.RuntimeException" />
				<tx:method name="update*" propagation="REQUIRED" read-only="false"
					rollback-for="java.lang.RuntimeException" />
				<tx:method name="check*" propagation="REQUIRED" read-only="false"
					rollback-for="java.lang.RuntimeException" />
				<tx:method name="print*" propagation="REQUIRED" read-only="false"
					rollback-for="java.lang.RuntimeException" />
				<tx:method name="*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED"
					rollback-for="java.lang.RuntimeException" />
			</tx:attributes>
		</tx:advice>
		<aop:config>
			<aop:pointcut id="pc"
				expression="execution(public * com.consult.service.impl..*.*(..))" />
			<aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" />
		</aop:config>-->

</beans>