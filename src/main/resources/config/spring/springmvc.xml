<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
	    http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <description>Spring mvc 配置</description>

    <!-- 开启controller注解支持 -->
    <!-- 注：如果base-package=com.dn.spring.controller 则注解事务不起作用 TODO 读源码-->
    <context:component-scan base-package="com.dn.spring.controller">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!--
        实现注释驱动Bean定义，同时将bean自动注入容器中使用。
        即解决了@Controller标识的类的bean的注入和使用
    -->
    <!--<context:annotation-config/>-->

    <!-- 静态资源放行,不拦截 -->
    <!--<mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>-->
    <!--<mvc:resources location="/WEB-INF/css/" mapping="/css/**"/>-->


    <!--jsp 视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 定义文件上传解析器 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设定默认编码 -->
        <property name="defaultEncoding" value="UTF-8"></property>
        <!-- 设定文件上传的最大值5MB，5*1024*1024 -->
        <property name="maxUploadSize" value="5242880"></property>
    </bean>

    <!--重定向-->
    <!--<mvc:view-controller path="/" view-name="redirect:/index" />-->

    <!-- DispatcherServlet.properties 配置文件中做了默认配置-->
    <!--DefaultAnnotationHandlerMapping已过时，改为 RequestMappingHandlerMapping-->
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>-->
    <!--AnnotationMethodHandlerAdapter 已过时，改为 RequestMappingHandlerAdapter初始化 messageConverters 默认的消息转换器-->
    <!--<bean id="handlerAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
    <!--    &lt;!&ndash;消息转换器，在这里可以注册其它消息转换器&ndash;&gt;-->
    <!--    <property name="messageConverters">-->
    <!--        <list>-->
    <!--            <ref bean="mappingJacksonHttpMessageConverter"/>-->
    <!--            <ref bean="stringHttpMessageConverter"/>-->
    <!--        </list>-->
    <!--    </property>-->
    <!--</bean>-->

    <!--
      启SpringMVC注解模式
      简化配置：
		1.自动注册 DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter 两个bean
		2.提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持
		3. 配置一些 messageconverter。即解决了@Controller注解的使用前提配置
     -->
    <!--
     <mvc:annotation-driven/>
     -->

    <!-- 解决springMVC响应数据乱码   text/plain 就是响应的时候原样返回数据 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <ref bean="stringHttpMessageConverter"/>
            <ref bean="mappingJacksonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- StringHttpMessageConverter 默认编码为 ISO-8859-1 -->
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes" value="text/plain;charset=UTF-8"/>
    </bean>

    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

</beans>